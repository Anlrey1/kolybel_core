# run_kolybel.ps1

# === –ü–µ—Ä–µ—Ö–æ–¥ –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ ===
$projectRoot = "C:\Users\Andrew\kolybel_core"
Set-Location $projectRoot

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ venv ===
$venvPath = ".\venv"
if (-not (Test-Path "$venvPath\Scripts\Activate.ps1")) {
    Write-Host "‚ùå –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!" -ForegroundColor Red
    exit 1
}

# === –ê–∫—Ç–∏–≤–∞—Ü–∏—è venv ===
if (-not $env:VIRTUAL_ENV) {
    Write-Host "üîß –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..." -ForegroundColor Yellow
    try {
        .\venv\Scripts\Activate.ps1
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ venv: $_" -ForegroundColor Red
        exit 1
    }
}

Write-Host "üöÄ –ó–∞–ø—É—Å–∫ –ö–æ–ª—ã–±–µ–ª–∏..." -ForegroundColor Cyan

# === –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ) ===
Write-Host "üìê –ê–≤—Ç–æ—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ Black..."
try {
    black main.py core.py llm.py memory_core.py --line-length 88
} catch {
    Write-Host "‚ö†Ô∏è Black –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ú–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: pip install black" -ForegroundColor Yellow
}

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ ===
Write-Host "üßº –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ —á–µ—Ä–µ–∑ py_compile..." -ForegroundColor White
$syntaxOk = $true
$files = @("main.py", "core.py", "llm.py", "memory_core.py", "agents.py", "template_engine.py", "prompt_templates_loader.py")

foreach ($file in $files) {
    python -m py_compile $file
    if ($LastExitCode -ne 0) {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –≤ —Ñ–∞–π–ª–µ: $file" -ForegroundColor Red
        $syntaxOk = $false
    }
}

if (-not $syntaxOk) {
    Write-Host "‚õî –ó–∞–ø—É—Å–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑-–∑–∞ –æ—à–∏–±–æ–∫ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞!" -ForegroundColor Red
    exit 1
}

# === –ó–∞–ø—É—Å–∫ Docker-—Å–µ—Ä–≤–∏—Å–æ–≤ ===
Write-Host "üê≥ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞: –∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–µ–π..."
docker-compose down
docker-compose up -d --remove-orphans

# === –û–∂–∏–¥–∞–Ω–∏–µ Ollama ===
Write-Host "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Ollama..."
do {
    try {
        $status = docker inspect cradle-llm --format "{{.State.Health.Status}}"
    } catch {
        Write-Host "üîÑ –û–∂–∏–¥–∞–µ–º Docker API..."
        Start-Sleep -Seconds 5
        continue
    }

    Write-Host "–°—Ç–∞—Ç—É—Å: $status"
    Start-Sleep -Seconds 5
} while ($status -ne "healthy")

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTPS-–ø—Ä–æ–∫—Å–∏ ===
Write-Host "üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTPS-–ø—Ä–æ–∫—Å–∏..." -ForegroundColor Green
$response = curl.exe -k https://localhost/api/tags 

if ($response.StatusCode -eq 200) {
    Write-Host "‚úÖ Ollama —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ HTTPS!"
} else {
    Write-Host "‚ùå –ü—Ä–æ–∫—Å–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–¥: $($response.StatusCode)" -ForegroundColor Red
    docker logs ollama-https-proxy
    exit 1
}

# === –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã ===
Write-Host "üß† –ó–∞–ø—É—Å–∫ –ö–æ–ª—ã–±–µ–ª–∏..." -ForegroundColor Cyan
python main.py

Write-Host "üëã –†–∞–±–æ—Ç–∞ –ö–æ–ª—ã–±–µ–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞." -ForegroundColor Yellow